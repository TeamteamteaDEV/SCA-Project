{"version":3,"sources":["../../React-Display/src/database/firebase.js","../../React-Display/src/pages/Display.js","../../React-Display/src/pages/Page404.js","../../React-Display/src/pages/Task.js","../../React-Display/src/App.js","../../React-Display/src/index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","Display","_useState","useState","_useState2","Object","slicedToArray","databaseArray","setDatabaseArray","useEffect","q","query","collection","db","orderBy","onSnapshot","snapshot","dt","docs","map","doc","id","data","_useState3","_useState4","createShow","setCreateShow","handleCreateClose","_useState5","projectName","description","name","date","measureMode","dataCounts","dataVoltage","countsTime","progress","_useState6","setData","onCreateDataChange","event","_event$target","target","value","prevData","objectSpread","defineProperty","formSubmit","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","timeStamp","res","wrap","_context","prev","next","preventDefault","Timestamp","fromDate","Date","addDoc","sent","console","log","stop","_x","apply","this","arguments","_useState7","_useState8","editShow","setEditShow","handleEditClose","_useState9","_useState10","editId","setEditId","_useState11","_useState12","editProjectName","setEditProjectName","_useState13","_useState14","editDescription","setEditDescription","_useState15","_useState16","editName","setEditName","_useState17","_useState18","editMeasureMode","setEditMeasureMode","_useState19","_useState20","editDate","setEditDate","editSubmit","_ref2","_callee2","_context2","setDoc","_x2","_useState21","_useState22","alertShow","setAlertShow","handleAlertClose","_useState23","_useState24","deleteId","setDeleteId","navigate","useNavigate","navigateToProject","useCallback","cardId","replace","react_default","a","createElement","Fragment","className","card","index","dateObj","seconds","current","concat","getDate","getMonth","getFullYear","Card","style","width","key","Body","Title","Text","ListGroup","Item","Footer","Button","variant","onClick","class","Modal","show","onHide","Header","closeButton","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","as","rows","Select","disabled","type","form","_ref3","_callee3","_context3","deleteDoc","deleteProject","aria-label","Page404","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Task","useParams","projectData","setProjectData","arrayJson","setArrayJson","setDate","docRef","getData","voltage","counts","clearTrueOfScaParameter","Task_regeneratorRuntime","status","LLD","scaParameter","String","window","time","mode","updateScaParameterToDatabase","setScaParameter","onSumitParameterChange","formSubmitSca","step","Math","ceil","doStartCounting","tId","_ref4","_callee4","_context4","renderAutoScanData","checkInitProgressBar","AreaChart","height","margin","top","right","left","bottom","Area","dataKey","stroke","fill","CartesianGrid","strokeDasharray","XAxis","offset","position","YAxis","angle","textAnchor","Tooltip","filename","element","label","renderSingleData","checkEmpty","length","percent","ProgressBar","animated","now","InputGroup","App","react_router","path","pages_Display","pages_Task","pages_Page404","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.67e019b9.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBIfgnGlmxP3iI0IZwZAslZELo_uLQQLf0\",\n  authDomain: \"radiation-display-f5272.firebaseapp.com\",\n  projectId: \"radiation-display-f5272\",\n  storageBucket: \"radiation-display-f5272.appspot.com\",\n  messagingSenderId: \"46965304098\",\n  appId: \"1:46965304098:web:3b530ae87a325937f3937b\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport default getFirestore(app);","import React, { useEffect, useState, useCallback } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { addDoc, \n        setDoc, \n        collection, \n        onSnapshot, \n        query, \n        orderBy, \n        doc, \n        deleteDoc,\n        Timestamp } from 'firebase/firestore';\nimport db from \"../database/firebase\"\n\nimport \"../style/Display.css\" \n\n\nfunction Display() {\n\n\n    // Database to Card ----------------------------------------------\n\n    const [databaseArray, setDatabaseArray] = useState([])\n\n    useEffect(() => {\n        const q = query(collection(db, \"Project\"), orderBy(\"date\", \"desc\"));\n        onSnapshot(q, (snapshot) => {\n            const dt = snapshot.docs.map(doc => {\n                return {\n                    \"id\": doc.id,\n                    \"data\":  doc.data()\n                } // return {id:... , data: {...}}\n            })\n            setDatabaseArray(dt) // dt is a list of {id:... , data: {...}}\n        });\n    }, [])  \n\n    \n\n\n\n\n    // Add Project to Database ----------------------------------------------\n\n    const [createShow, setCreateShow] = useState(false);\n    const handleCreateClose = () => setCreateShow(false);\n    const handleCreateShow = () => setCreateShow(true);\n\n    const [data, setData] = useState({\n        projectName: \"Project 101\",\n        description: \"This project does not have description\",\n        name: \"nuclear guy\",\n        date: \"\",\n        measureMode: \"Manual\", // String for Default Value\n        dataCounts: [],\n        dataVoltage: [],\n        countsTime: \"\",\n        progress: -1\n    })\n\n    function onCreateDataChange(event) {\n        const { name, value } = event.target\n        setData((prevData) => {\n            return {\n                ...prevData,\n                [name]: value\n            }\n        })\n    }\n    \n    const formSubmit = async (event) => {\n        event.preventDefault()\n        \n        const timeStamp = Timestamp.fromDate(new Date());\n        setData((prevData) => {\n            prevData[\"date\"] = timeStamp\n            return prevData\n        })\n        \n        const res = await addDoc(collection(db, \"Project\"), data);\n        console.log(\"Creating Project: id = \", res.id)\n        setData({\n            projectName: \"Project 101\",\n            description: \"This project does not have description\",\n            name: \"nuclear guy\",\n            date: \"\",\n            measureMode: \"Manual\", // String for Default Value\n            dataCounts: [],\n            dataVoltage: [],\n            countsTime: \"\",\n            progress: -1\n        })\n    }\n\n    // Edit Project  ---------------------------------------------------------\n\n    const [editShow, setEditShow] = useState(false)\n    const handleEditClose = () => setEditShow(false)\n    const handleEditShow = () => setEditShow(true)\n\n    const [editId, setEditId] = useState(\"\")\n\n    const [editProjectName, setEditProjectName] = useState(\"\") \n    const [editDescription, setEditDescription] = useState(\"\")\n    const [editName, setEditName] = useState(\"\")\n    const [editMeasureMode, setEditMeasureMode] = useState(\"\")\n    const [editDate, setEditDate] = useState(\"\")\n\n    const onEditProjectNameChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditProjectName(event.target.value)\n    }\n\n    const onEditDescriptionChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditDescription(event.target.value);\n    }\n\n    const onEditNameChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditName(event.target.value);\n    }\n\n    const editSubmit = async (event) => {\n        event.preventDefault()\n\n        await setDoc(doc(db, \"Project\", editId), {\n            projectName: editProjectName,\n            description: editDescription,\n            name: editName,\n            date: editDate,\n            measureMode: editMeasureMode,\n            dataCounts: data.dataCounts,\n            dataVoltage: data.dataVoltage,\n            countsTime: data.countsTime,\n            progress: data.progress\n        });\n    }\n\n    // Delete Project from Database ----------------------------------------------\n\n    const [alertShow, setAlertShow] = useState(false);\n    const handleAlertClose = () => setAlertShow(false);\n\n\n    const handleAlertShow = () => setAlertShow(true);\n\n\n\n    const [deleteId, setDeleteId] = useState(\"\")\n\n    // Display card of Project ----------------------------------------------\n\n    const navigate = useNavigate();\n    const navigateToProject = useCallback((cardId) => navigate(\"/\"+cardId, { replace: false }), [navigate]);\n\n    const renderCard = (card, index) => {\n        const dateObj = new Date(card.data.date.seconds * 1000)\n        const current = `${dateObj.getDate()}/${dateObj.getMonth()+1}/${dateObj.getFullYear()}`\n\n        return (\n            <Card style={{ width: \"18rem\"}} key={index} \n                className=\"card col-12 col-md-6 col-lg-3\" >\n                <Card.Body>\n                    <Card.Title>{card.data.projectName}</Card.Title>\n                    <Card.Text>{card.data.description}</Card.Text>\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                    <ListGroup.Item><b>Name</b>  {card.data.name}</ListGroup.Item>\n                    <ListGroup.Item><b>Date</b>  {current}</ListGroup.Item>\n                    <ListGroup.Item><b>Type</b>  {card.data.measureMode}</ListGroup.Item>\n                </ListGroup>\n                <Card.Footer className=\"text-end\">\n                     <Button variant=\"primary\" className=\"m-1\" onClick={() => {       \n                        navigateToProject(card.id)\n                    }}>\n                        {\"Inspect\"}\n                    </Button>\n                    \n                    <Button variant=\"warning\" className=\"m-1\" onClick={() => {\n                        setEditId(card.id)\n                        setEditProjectName(card.data.projectName)\n                        setEditDescription(card.data.description)\n                        setEditName(card.data.name)\n                        setEditMeasureMode(card.data.measureMode)\n                        setEditDate(card.data.date)\n                        handleEditShow()\n                    }}>\n                        <i className=\"fa-regular fa-pen-to-square\"></i>\n                    </Button>\n                    <Button variant=\"danger\" className=\"m-1\" onClick={() => {       \n                        setDeleteId(card.id)\n                        handleAlertShow()\n                    }}>\n                        <i className=\"fa-regular fa-trash-can\"></i>\n                    </Button>\n                </Card.Footer>\n            </Card>\n        )\n    }\n\n\n    return (\n        <>\n\n        <section className=\"main-content\">\n            <br></br>\n            <br></br>\n            <h1 className='title'>SCA Dashboard</h1>\n            <br></br>\n            <br></br>\n            <div className='container'>\n                <div className='activity'>  \n                    {databaseArray.map(renderCard)}\n                    <div className='footer'>\n                        <div>\n                            <Button variant=\"primary\" className=\"NewProjectButton\" onClick={handleCreateShow}>\n                                <p><i class=\"fa-solid fa-plus\"></i></p>\n                            </Button>\n                        </div>\n                    </div>  \n                </div> \n            </div>   \n        </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <Modal show={editShow} onHide={handleEditClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Project</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={editSubmit} id=\"edit-project\">\n                                              \n                        <Form.Group className=\"mb-3\" controlId=\"formProjectName\">\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control \n                                name=\"projectName\" \n                                value={editProjectName}\n                                placeholder=\"edit project name\" \n                                onChange={onEditProjectNameChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control \n                                as=\"textarea\" rows={3}\n                                name=\"description\" \n                                value={editDescription}\n                                placeholder=\"edit description\" \n                                onChange={onEditDescriptionChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control \n                                name=\"name\" \n                                value={editName}\n                                placeholder=\"edit name\"\n                                onChange={onEditNameChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formMeasureMode\">\n                            <Form.Label>Measurement Mode</Form.Label>\n                            <Form.Select    \n                                name=\"measureMode\" \n                                disabled\n                            >\n                                <option>{editMeasureMode}</option>\n                            </Form.Select>\n                        </Form.Group>\n\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={handleEditClose}>\n                        Cancel\n                    </Button> \n                    <Button variant=\"warning\" onClick={handleEditClose} type=\"submit\" form=\"edit-project\" value=\"Submit\">Edit Project</Button>     \n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <Modal show={alertShow} onHide={handleAlertClose}>\n                <Modal.Header>\n                    <Modal.Title>Deleting Project ?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <p>\n                    When clicking on the \"Delete\" button, \n                    the system will remove this project from the database permanently. \n                    It means that data in project cannot be restored.\n                </p>    \n                <p>\n                    Press \"Cancel\" button to cancel.\n                </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={handleAlertClose}>\n                        Cancel\n                    </Button> \n                    <Button variant=\"danger\" onClick={() => {\n                         const deleteProject = async () => {\n                             await deleteDoc(doc(db, \"Project\", deleteId));    \n                         }  \n                        deleteProject()\n                        handleAlertClose()\n                        console.log(\"Deleting Project: id = \",deleteId)\n                    }}>\n                        Delete\n                    </Button>     \n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <Modal show={createShow} onHide={handleCreateClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Project</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={formSubmit} id=\"create-project\">\n                        \n                        <Form.Group className=\"mb-3\" controlId=\"formProjectName\">\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control \n                                name=\"projectName\" \n                                placeholder=\"project name\" \n                                onChange={onCreateDataChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control \n                                as=\"textarea\" rows={3}\n                                name=\"description\" \n                                placeholder=\"description\" \n                                onChange={onCreateDataChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control \n                                name=\"name\" \n                                placeholder=\"name\" \n                                onChange={onCreateDataChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formMeasureMode\">\n                            <Form.Label>Measurement Mode</Form.Label>\n                            <Form.Select    \n                                name=\"measureMode\" \n                                onChange={onCreateDataChange}\n                                aria-label=\"Default select example\"\n                            >\n                                <option>Manual</option>\n                                <option>Integral</option>\n                                <option>Auto Scan</option>\n                            </Form.Select>\n                        </Form.Group>\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleCreateClose} type=\"submit\" form=\"create-project\" value=\"Submit\">Create Project</Button>     \n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Display;\n","import React from 'react';\nimport \"../style/Page404.css\" ;\n\nfunction Page404() {\n    return (\n    <div className='error'>\n        <p className='p1'>404 Not Found</p>\n        <p className='p2'>Please Contact Developer</p>\n    </div>\n    )\n}\n  \nexport default Page404","import React, { useEffect, useState } from 'react';\nimport { Card, InputGroup } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form  from 'react-bootstrap/Form';\nimport { useParams } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nimport { setDoc, doc, onSnapshot } from 'firebase/firestore';\nimport db from \"../database/firebase\"\n\nimport \"../style/Task.css\" ;\n\nimport { Label, AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport ReactExport from \"react-data-export\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst Task = () => {\n\n    const { projectId } = useParams();\n\n    const [projectData, setProjectData] = useState([])\n    /*  projectData = [\n            projectName: \"Project 101\",\n            description: \"\",\n            name: \"\",\n            date: \"\",\n            measureMode: \"\", \n            dataCounts: [],\n            dataVoltage: [],\n            countsTime: \"\",\n            progress: \"\"\n        ]\n    */\n    \n    const [arrayJson, setArrayJson] = useState([])\n    /*  arrayJson = [\n            { voltage: 14, counts: 2435 },\n            { voltage: 150, counts: 87365 },\n            { voltage: 234, counts: 12 },\n            ...\n        ]\n    */\n\n    const [date, setDate] = useState()\n    \n    useEffect(() => {\n        const docRef = doc(db, 'Project', projectId);\n        const getData = onSnapshot(docRef, (doc) => {\n            setProjectData(doc.data());\n            \n            let dt = doc.data().dataVoltage.map((voltage, index) => ({\n                voltage,\n                counts: doc.data().dataCounts[index]\n            }))\n            setArrayJson(dt);\n\n            const dateObj = new Date(doc.data().date.seconds * 1000)\n            const current = `${dateObj.getDate()}/${dateObj.getMonth()+1}/${dateObj.getFullYear()}`\n            setDate(current);\n\n            clearTrueOfScaParameter()\n        });\n\n        return () => getData();\n    }, [])  \n\n    const clearTrueOfScaParameter = async () => {\n        await setDoc(doc(db, \"ScaParameter\", \"u11HXFCRjpZQ1STD75iy\"), {\n            status: false,\n            LLD: scaParameter.LLD < 0 ? \"0\" : scaParameter.LLD > 10 ? \"10\" : String(scaParameter.LLD),\n            window: scaParameter.window < 0 ? \"0\" : scaParameter.window > 10 ? \"10\" : String(scaParameter.window),\n            time: scaParameter.time < 0 ? \"0\" : scaParameter.time > 60 ? \"60\" : String(scaParameter.time),\n            id: scaParameter.id,\n            mode:scaParameter.mode\n        })\n    }\n\n    const updateScaParameterToDatabase = async () => {\n        await setDoc(doc(db, \"ScaParameter\", \"u11HXFCRjpZQ1STD75iy\"), {\n            status: scaParameter.status,\n            LLD: scaParameter.LLD < 0 ? \"0\" : scaParameter.LLD > 10 ? \"10\" : String(scaParameter.LLD),\n            window: scaParameter.window < 0 ? \"0\" : scaParameter.window > 10 ? \"10\" : String(scaParameter.window),\n            time: scaParameter.time < 0 ? \"0\" : scaParameter.time > 60 ? \"60\" : String(scaParameter.time),\n            id: scaParameter.id,\n            mode: scaParameter.mode\n        })\n    }\n\n\n    // Send Sca Parameter (LLD, Window, Time) to Backend ----------------------------------------------\n\n\n    const [scaParameter, setScaParameter] = useState({\n        status: false,\n        LLD: 0,\n        window: 10,\n        time: 5,\n        id: \"\",\n        mode: \"\"\n    })\n\n    function onSumitParameterChange(event) {\n        const { name, value } = event.target\n        setScaParameter((prevData) => {\n            return {\n                ...prevData,\n                [name]: value\n            }\n        })\n    }\n\n    const formSubmitSca = async (event) => {\n        event.preventDefault()\n        let step\n        if (projectData.measureMode===\"Auto Scan\") {\n            step = Math.ceil((10-scaParameter.LLD)/scaParameter.window)\n        } else {\n            step = 1\n        }\n\n        await setDoc(doc(db, \"Project\", projectId), {\n            projectName: projectData.projectName,\n            description: projectData.description,\n            name: projectData.name,\n            date: projectData.date,\n            measureMode: projectData.measureMode, \n            dataCounts: [],\n            dataVoltage: [],\n            countsTime: scaParameter.time,\n            progress: step\n        })\n    }\n\n    const doStartCounting = (tId) => {\n        scaParameter[\"status\"] = true\n        scaParameter[\"id\"] = tId\n        scaParameter[\"mode\"] = projectData.measureMode\n        updateScaParameterToDatabase()\n        console.log(scaParameter)\n    }\n\n    const doStartCountingIntegral = (tId) => {\n        scaParameter[\"status\"] = true\n        scaParameter[\"id\"] = tId\n        scaParameter[\"window\"] = 10\n        scaParameter[\"mode\"] = projectData.measureMode\n        updateScaParameterToDatabase()\n        console.log(scaParameter)\n    }\n\n\n    // Edit Project  ---------------------------------------------------------\n\n    const [editShow, setEditShow] = useState(false)\n    const handleEditClose = () => setEditShow(false)\n    const handleEditShow = () => setEditShow(true)\n\n    const [editProjectName, setEditProjectName] = useState(\"\") \n    const [editDescription, setEditDescription] = useState(\"\")\n    const [editName, setEditName] = useState(\"\")\n\n    const onEditProjectNameChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditProjectName(event.target.value)\n    }\n\n    const onEditDescriptionChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditDescription(event.target.value);\n    }\n\n    const onEditNameChange = (event) => {\n        event.preventDefault() // prevent the default action\n        setEditName(event.target.value);\n    }\n\n    const editSubmit = async (event) => {\n        event.preventDefault()\n\n        await setDoc(doc(db, \"Project\", projectId), {\n            projectName: editProjectName,\n            description: editDescription,\n            name: editName,\n            date: projectData.date,\n            measureMode: projectData.measureMode,\n            dataCounts: projectData.dataCounts,\n            dataVoltage: projectData.dataVoltage,\n            countsTime: projectData.countsTime,\n            progress: projectData.progress\n        });\n    }\n\n    // Display by Mode  ---------------------------------------------------------\n\n    const displayByMode = (mode) => {\n        if (mode===\"Manual\") {\n            return(\n                <>\n                    <Card.Body className='inputZone text-end'>\n                        <Form onSubmit={formSubmitSca} id=\"send-LLD-Window-Time\">\n                            \n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>LLD</InputGroup.Text>\n                                <Form.Control\n                                    name=\"LLD\" \n                                    placeholder=\"LLD (0 - 10 V)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                                <InputGroup.Text>ULD</InputGroup.Text>\n                                <Form.Control\n                                    name=\"window\" \n                                    placeholder=\"ULD (0 - 10 V)\"\n                                    onChange={onSumitParameterChange} \n                                />\n                                <InputGroup.Text>Time</InputGroup.Text>\n                                <Form.Control\n                                    name=\"time\" \n                                    placeholder=\"Time/Step (0 - 60 sec)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                            </InputGroup>\n                        </Form>\n\n                        <Button variant=\"primary\" className=\"startButton\" onClick={() => {       \n                            doStartCounting(projectId)\n                        }} type=\"submit\" form=\"send-LLD-Window-Time\" value=\"Submit\">\n                            {\"Start Counting\"}\n                        </Button>\n                    </Card.Body>\n                    <Card.Footer className='graphZone'>\n                        {renderSingleData()}\n                    </Card.Footer>\n                </>\n            )\n        } else if (mode===\"Integral\") {\n            return(\n                <>\n                    <Card.Body className='inputZone text-end'>\n                        <Form onSubmit={formSubmitSca} id=\"send-LLD-Window-Time\">\n                            \n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>LLD</InputGroup.Text>\n                                <Form.Control\n                                    name=\"LLD\" \n                                    placeholder=\"LLD (0 - 10 V)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                                <InputGroup.Text>ULD</InputGroup.Text>\n                                <Form.Control\n                                    name=\"window\" \n                                    placeholder=\"10 V\" \n                                    disabled\n                                />\n                                <InputGroup.Text>Time</InputGroup.Text>\n                                <Form.Control\n                                    name=\"time\" \n                                    placeholder=\"Time/Step (0 - 60 sec)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                            </InputGroup>\n                        </Form>\n\n                        <Button variant=\"primary\" className=\"startButton\" onClick={() => {       \n                            doStartCountingIntegral(projectId)\n                        }} type=\"submit\" form=\"send-LLD-Window-Time\" value=\"Submit\">\n                            {\"Start Counting\"}\n                        </Button>\n                    </Card.Body>\n                    <Card.Footer className='graphZone'>\n                        {renderSingleData()}\n                    </Card.Footer>\n                </>\n                )            \n        } else if (mode===\"Auto Scan\") {\n            return(\n                <>\n                    <Card.Body className='inputZone text-end'>\n                        <Form onSubmit={formSubmitSca} id=\"send-LLD-Window-Time\">\n                            \n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>Stating Voltage</InputGroup.Text>\n                                <Form.Control\n                                    name=\"LLD\" \n                                    placeholder=\"Voltage (0 - 10 V)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                                <InputGroup.Text>Window</InputGroup.Text>\n                                <Form.Control\n                                    name=\"window\" \n                                    placeholder=\"Window (0 - 10 V)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                                <InputGroup.Text>Time</InputGroup.Text>\n                                <Form.Control\n                                    name=\"time\" \n                                    placeholder=\"Time/Step (0 - 60 sec)\" \n                                    onChange={onSumitParameterChange}\n                                />\n                            </InputGroup>\n                        </Form>\n\n                        <Button variant=\"primary\" className=\"startButton\" onClick={() => {       \n                            doStartCounting(projectId)\n                        }} type=\"submit\" form=\"send-LLD-Window-Time\" value=\"Submit\">\n                            {\"Start Counting\"}\n                        </Button>\n                    </Card.Body>\n                    <Card.Footer className='graphZone'>\n                        {renderAutoScanData()}\n                    </Card.Footer>\n                </>\n            )\n        }\n    }\n\n    \n    const renderAutoScanData = () => {\n\n        return(\n            <>\n                {checkInitProgressBar()}\n                <div className='chart-display'>\n                    <div className='chart-chart'>\n                        <AreaChart width={800} height={400} data={arrayJson} margin={{ top: 75, right: 75, left: 75, bottom: 50}}>\n                            <Area type=\"monotone\" dataKey=\"counts\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                            <XAxis dataKey=\"voltage\">\n                                <Label value=\"LLD Voltage (V)\" offset={10} position=\"bottom\" />\n                            </XAxis>\n                            <YAxis>\n                                <Label value={\"Counts / \" + projectData.countsTime + \" s\"} offset={10} position=\"left\" angle={-90} textAnchor=\"start\" />\n                            </YAxis>\n                            <Tooltip />\n                        </AreaChart>\n                    </div>\n    \n                    <div className='chart-button'>\n                        <ExcelFile filename={projectData.projectName + \" SCA Spectrum\"} element={<Button variant=\"primary\">Download Data</Button>}>\n                            <ExcelSheet data={arrayJson} name=\"SCA Spectrum\">\n                                <ExcelColumn label=\"LLD Voltage (V)\" value=\"voltage\"/>\n                                <ExcelColumn label={\"Counts / \" + projectData.countsTime + \" s\"} value=\"counts\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const renderSingleData = () => {\n        return(\n            <>\n            {checkInitProgressBar()}\n            <div className='chart-display'>\n                {checkEmpty()}\n            </div>\n            </>\n        )\n    }\n\n    const checkEmpty = () => {\n        if(arrayJson.length === 1) {\n            return(\n                <>\n                    <div className='singleDisplay'>\n                        {arrayJson[0][\"counts\"]} Counts / {projectData.countsTime} s\n                    </div>\n                    <div className='chart-button'>\n                        <ExcelFile filename={projectData.projectName + \" SCA Counts\"} element={<Button variant=\"primary\">Download Data</Button>}>\n                            <ExcelSheet data={arrayJson} name=\"SCA Counts\">\n                                <ExcelColumn label=\"LLD Voltage (V)\" value=\"voltage\"/>\n                                <ExcelColumn label={\"Counts / \" + projectData.countsTime + \" s\"} value=\"counts\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                    </div>\n                </>\n            ) \n        } else {\n            return(\n                <div className='singleDisplay'>\n                    0 Counts\n                </div>                \n            )    \n        }\n    }\n\n    const checkInitProgressBar = () => {\n        if (projectData.progress===-1) {\n            return(\n                <>\n                </>\n            )\n        } else {\n            const percent = arrayJson.length/projectData.progress * 100\n            \n            return(\n                <>\n                <div className='progressSection'>\n                        <div>\n                            Progress\n                        </div>\n                        <div>\n                            <ProgressBar variant=\"success\" animated now={percent} label={`${percent}%`} />\n                        </div>                       \n                </div>\n                </>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n    return (\n        <>\n\n        <div className='Task'> \n            <div className='mca-display'>\n                <div className='col-md-8'>\n                    <Card>\n                        <div className='operation row'>\n                            <div className='col-8'>\n                                <Card.Body>\n                                    <Card.Title>{projectData.projectName}</Card.Title>\n                                    <Card.Text>{date}</Card.Text>\n                                    <Card.Text><b>Name</b> {projectData.name}</Card.Text>\n                                    <Card.Text><b>Description</b> {projectData.description}</Card.Text>\n                                    <Card.Text><b>Mode</b> {projectData.measureMode}</Card.Text>\n                                </Card.Body>\n                            </div>\n                            <div className='mca-button col-4 text-end'>\n                                <Button variant=\"warning\" className=\"m-1\" onClick={() => {\n                                    setEditProjectName(projectData.projectName)\n                                    setEditDescription(projectData.description)\n                                    setEditName(projectData.name)\n                                    handleEditShow()\n                                }}>\n                                    <i className=\"fa-regular fa-pen-to-square\"></i>\n                                </Button>\n                            </div>\n                        </div>\n\n                        {displayByMode(projectData.measureMode)}\n\n                    </Card>\n                </div>  \n            </div>\n        </div>\n\n\n\n        <Modal show={editShow} onHide={handleEditClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Project</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={editSubmit} id=\"edit-project\">\n                                              \n                        <Form.Group className=\"mb-3\" controlId=\"formProjectName\">\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control \n                                name=\"projectName\" \n                                value={editProjectName}\n                                placeholder=\"edit project name\" \n                                onChange={onEditProjectNameChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formDescription\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control \n                                as=\"textarea\" rows={3}\n                                name=\"description\" \n                                value={editDescription}\n                                placeholder=\"edit description\" \n                                onChange={onEditDescriptionChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control \n                                name=\"name\" \n                                value={editName}\n                                placeholder=\"edit name\"\n                                onChange={onEditNameChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formMeasureMode\">\n                            <Form.Label>Measurement Mode</Form.Label>\n                            <Form.Select    \n                                name=\"measureMode\" \n                                disabled\n                            >\n                                <option>{projectData.measureMode}</option>\n                            </Form.Select>\n                        </Form.Group>\n\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"light\" onClick={handleEditClose}>\n                        Cancel\n                    </Button> \n                    <Button variant=\"warning\" onClick={handleEditClose} type=\"submit\" form=\"edit-project\" value=\"Submit\">Edit Project</Button>     \n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n        </>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Routes, Route } from \"react-router-dom\";\nimport Display from './pages/Display';\nimport Page404 from './pages/Page404';\nimport Task from './pages/Task';\n\nfunction App() {\n\n  return (\n    \n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Display />} />\n          <Route path=\"display\" element={<Display />} />\n          <Route path=\":projectId\" element={<Task />} />\n          <Route path=\"*\" element={<Page404 />} />\n        </Route>\n      </Routes>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./index.css\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter> \n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}