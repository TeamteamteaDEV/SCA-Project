{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/Users/wasunorakcot/Downloads/Robot Car Project/React-Display/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _collections = require('../collections');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n\n\nvar SPACE = ' ';\nvar OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap'];\nvar ARRAY_REGEXP = /^(HTML\\w*Collection|NodeList)$/;\n\nvar testName = function testName(name) {\n  return OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);\n};\n\nvar test = function test(val) {\n  return val && val.constructor && !!val.constructor.name && testName(val.constructor.name);\n};\n\nexports.test = test;\n\nvar isNamedNodeMap = function isNamedNodeMap(collection) {\n  return collection.constructor.name === 'NamedNodeMap';\n};\n\nvar serialize = function serialize(collection, config, indentation, depth, refs, printer) {\n  var name = collection.constructor.name;\n\n  if (++depth > config.maxDepth) {\n    return '[' + name + ']';\n  }\n\n  return (config.min ? '' : name + SPACE) + (OBJECT_NAMES.indexOf(name) !== -1 ? '{' + (0, _collections.printObjectProperties)(isNamedNodeMap(collection) ? Array.from(collection).reduce(function (props, attribute) {\n    props[attribute.name] = attribute.value;\n    return props;\n  }, {}) : _objectSpread({}, collection), config, indentation, depth, refs, printer) + '}' : '[' + (0, _collections.printListItems)(Array.from(collection), config, indentation, depth, refs, printer) + ']');\n};\n\nexports.serialize = serialize;\nvar plugin = {\n  serialize: serialize,\n  test: test\n};\nvar _default = plugin;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}